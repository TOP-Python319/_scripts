УР - удалённый репозиторий
ЛР1 - локальный репозиторий 1
ЛР2 - локальный репозиторий 2


--- УР ---
hello_world.py
funcs.py

шаг 6: УР получил коммиты (изменения) из ЛР1
шаг 14: УР получил коммиты (изменения) из ЛР2



--- ЛР1 ---
hello_world.py
funcs.py

шаг 1: внёс изменения в код
шаг 3: git add - запланировал изменения для следующего коммита
шаг 4: git commit -m - зафиксировал все запланированные на шаге 3 изменения, создал коммит
шаг 5: git push - отправил коммиты из ЛР в УР, синхронизировал ветки


--- ЛР2 ---
hello_world.py
funcs.py

шаг 0: git clone - скопировал все файлы и историю из УР в каталог локальной файловой системы и создал ЛР в этом каталоге
шаг 2: внёс изменения в код
шаг 7: git add - запланировал изменения для следующего коммита
шаг 8: git commit -m - зафиксировал все запланированные на шаге 7 изменения, создал коммит
шаг 9: git push - попытался отправить коммиты из ЛР в УР, но push был отклонён, т.к. в репозитории уже есть более новые коммиты
шаг 10: git pull --rebase - получил новые коммиты из УР, но автоматическое слияние невозможно,
	т.к. изменения происходили в одних и тех же строчках и у нас появился конфликт слияния (merge conlict)
	
<<<<<<< HEAD
    return 'tst1' + 'tst2' + 'tst3'
=======
    return 'tst3' + 'tst2' + 'tst1'
>>>>>>> 6c30310 (Функция сортирует значения по убыванию)

шаг 11: git add - запланировали изменения для следующего коммита (с разрешением конфликта слияния)
шаг 12: git commit -m - фиксируем разрешение конфликта
шаг 13: git push - отправляем изменения
