# —É–≥–∞–¥–∞–π–∫–∞ —á–∏—Å–µ–ª
# –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, –ø—Ä–æ—Å–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–≥–∞–¥–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ.
# –ï—Å–ª–∏ –¥–æ–≥–∞–¥–∫–∞ –±–æ–ª—å—à–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞,
# —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
# –ï—Å–ª–∏ –¥–æ–≥–∞–¥–∫–∞ –º–µ–Ω—å—à–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞,
# —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ "–°–ª–∏—à–∫–æ–º –º–∞–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª, —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç "–í—ã —É–≥–¥–∞–¥–∞–ª–∏, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!"
#____
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ç–æ—Ä–∞.
#____
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–∞—ë—Ç—Å—è 5 –ø–æ–ø—ã—Ç–æ–∫, –∏–Ω–∞—á–µ –ø—Ä–æ–∏–≥—Ä—ã—à.


# random
# while True
# input(), print()
# if/elif/else
# break, continue


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è +
# –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–∏—Å–ª–æ +
# –ü–æ–ø—Ä–æ—Å–∏—Ç—å –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ +
# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–∏—Å–ª–æ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å +
# –¶–∏–∫–ª–æ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö —á–∏—Å–µ–ª –∑–∞–≥–∞–¥–Ω–Ω–æ–º—É —á–∏—Å–ª—É
# –ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ —É–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ


import random


total_tries = 5

print('–Ø —Ö–æ—á—É —Å—ã–≥—Ä–∞—Ç—å —Å —Ç–æ–±–æ–π –≤ –∏–≥—Ä—É!')

while True:
    while True:
        bottomline = input('–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∂–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ç–æ—Ä–∞: ')
        if not bottomline.isdigit():
            print('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–ª—è –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã!')
            continue
        bottomline = int(bottomline)
        break
    while True:
        topline = input('–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä—Ö–Ω—é—é –≥—Ä–∞–Ω–∏—Ü—É —Ä–∞–Ω–¥–æ–º–∏–∑–∞—Ç–æ—Ä–∞: ')
        if not topline.isdigit():
            print('–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–ª—è –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã!')
            continue
        topline = int(topline)
        break
    if bottomline >= topline:
        print('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã, –Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ.')
        continue
    break

print(f'–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç {bottomline} –¥–æ {topline}, –ø–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å! üòàüòàüòà')
print(f'–£ —Ç–µ–±—è –≤—Å–µ–≥–æ {total_tries} –ø–æ–ø—ã—Ç–æ–∫!')

number = random.randint(bottomline, topline)

def is_valid(n: str, bottom: int, top: int) -> bool:
    if not n.isdigit() and not (n[0] == '-' and n[1:].isdigit()):
        return False
    if bottom <= int(n) <= top:
        return True
    return False


while True:
    user_try = input(f'–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç {bottomline} –¥–æ {topline}: ')
    if not is_valid(user_try, bottomline, topline):
        print(f'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!\n–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –æ—Ç {bottomline} –¥–æ {topline}')
        continue
    response = int(user_try)

    if response > number:
        print('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
    elif response < number:
        print('–°–ª–∏—à–∫–æ–º –º–∞–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
    else:
        print('–í—ã —É–≥–¥–∞–¥–∞–ª–∏, –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!')
        print('–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!')
        print('–°–µ–≥–æ–¥–Ω—è –≤—ã —É–π–¥—ë—Ç–µ –∂–∏–≤—ã–º.')
        break

    total_tries -= 1
    print(f'–û—Å—Ç–∞–ª–æ—Å—å {total_tries} –ø–æ–ø—ã—Ç–æ–∫.')
    
    if total_tries == 0:
        print('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –≤—ã —Å–∞–º–æ–µ —Å–ª–∞–±–æ–µ –∑–≤–µ–Ω–æ!')
        break


print('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞–º —Å–Ω–æ–≤–∞!')
